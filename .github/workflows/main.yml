# on: push
# name: Build Project
# jobs:
#   ci:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [12.x, 14.x]

#     steps:
#       - uses: actions/checkout@v2

#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}

#       - name: Cache node modules
#         id: cache-nodemodules
#         uses: actions/cache@v2
#         env:
#           cache-name: cache-node-modules
#         with:
#           # caching node_modules
#           path: node_modules
#           key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-build-${{ env.cache-name }}-
#             ${{ runner.os }}-build-
#             ${{ runner.os }}-
#       - name: Install Dependencies
#         if: steps.cache-nodemodules.outputs.cache-hit != 'true'
#         run: |
#           npm ci
#       - name: Build
#         run: |
#           npm run build

on: push
name: Build Project
jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: npm install and npm run build
        run: |
          npm i
          npm run build
      
      - name: Push Build to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/angular-githubaction/*"
          token: ${{ secrets.TOKEN }} 